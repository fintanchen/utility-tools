#compdef sqlmap
# author: keyvuui
# date: 2018-11-08
# location: https://github.com/keyvuui/utility-tools
# version: 0.2.0
# sqlmap: 1.2.11#stable

_sqlmap() {
	_arguments \
		{-h,--help}"[Show basic help message and exit]"\
		"-hh[Show advanced help message and exit]"\
		"--version[Show program's version number and exit]"\
		"-V[Verbosity level: 0-6 (default 1)]"\
		'-d[Connection string for direct database connection]'\
		{-u,--url}'[Target URL (e.g. "http://www.site.com/vuln.php?id=1")]'\
		'-l[Parse target(s) from Burp or WebScarab proxy log file]'\
		'-x[Parse target(s) from remote sitemap(.xml) file]'\
		'-m[Scan multiple targets given in a textual file]'\
		'-r[Load HTTP request from a file]'\
		"-g[Process Google dark results as target URLs]"\
		'-c[Load options from a configuration INI file]'\
		'--method[Force usage of given HTTP method (e.g. PUT)]'\
		'--data=[Data string to be sent through POST (e.g. "id=1")]'\
		'--param-del[Character used for splitting parameter values (e.g. &)]'\
		'--cookie[HTTP Cookie header value (e.g. "PHPSESSID=a8d127e..")]'\
		'--cookie-del=[Character used for splitting cookie values (e.g. ;)]'\
		'--load-cookies=[File containing cookies in Netscape/wget format]'\
		'--drop-set-cookie[Ignore Set-Cookie header from response]'\
		'--user-agent=[HTTP User-Agent header value]'\
		'--random-agent[Use randomly selected HTTP User-Agent header value]'\
		'--host=[HTTP Host header value]'\
		'--referer=[HTTP Referer header value]'\
		{-H,--hea..}'[Extra header (e.g. "X-Forwarded-For: 127.0.0.1")]'\
		'--headers=[Extra headers (e.g. "Accept-Language: fr\nETag: 123")]'\
		'--auth-type=[HTTP authentication type (Basic, Digest, NTLM or PKI)]'\
		'--auth-cred=[HTTP authentication credentials (name:password)]'\
		'--auth-file=[HTTP authentication PEM cert/private key file]'\
		'--ignore-code=[Ignore (problematic) HTTP error code (e.g. 401)]'\
		'--ignore-proxy[Ignore system default proxy settings]'\
		'--ignore-redirects[Ignore redirection attempts]'\
		'--ignore-timeouts[Ignore connection timeouts]'\
		'--proxy=[Use a proxy to connect to the target URL]'\
		'--proxy-cred=[Proxy authentication credentials (name:password)]'\
		'--proxy-file=[Load proxy list from a file]'\
		'--tor[Use Tor anonymity network]'\
		'--tor-port=[Set Tor proxy port other than default]'\
		'--tor-type=[Set Tor proxy type (HTTP, SOCKS4 or SOCKS5 (default))]'\
		'--check-tor[Check to see if Tor is used properly]'\
		'--delay=[Delay in seconds between each HTTP request]'\
		'--timeout=[Seconds to wait before timeout connection (default 30)]'\
		'--retries=[Retries when the connection timeouts (default 3)]'\
		'--randomize=[Randomly change value for given parameter(s)]'\
		'--safe-url=[URL address to visit frequently during testing]'\
		'--safe-post=[POST data to send to a safe URL]'\
		'--safe-req=[Load safe HTTP request from a file]'\
		'--safe-freq=[Test requests between two visits to a given safe URL]'\
		'--skip-urlencode[Skip URL encoding of payload data]'\
		'--csrf-token=[Parameter used to hold anti-CSRF token]'\
		'--csrf-url=[URL address to visit for extraction of anti-CSRF token]'\
		'--force-ssl[Force usage of SSL/HTTPS]'\
		'--hpp[Use HTTP parameter pollution method]'\
		'--eval=[Evaluate provided Python code before the request (e.g."import hashlib;id2=hashlib.md5(id).hexdigest()")]'\
		'-o[Turn on all optimization switches]'\
		'--predict-output[Predict common queries output]'\
		'--keep-alive[Use persistent HTTP(s) connections]'\
		'--null-connection[Retrieve page length without actual HTTP response body]'\
		'--threads=THREADS[Max number of concurrent HTTP(s) requests (default 1)]'\
		'-p[Testable parameter(s)]'\
		'--skip=SKIP[Skip testing for given parameter(s)]'\
		'--skip-static[Skip testing parameters that not appear to be dynamic]'\
		'--param-exclude=[Regexp to exclude parameters from testing (e.g. "ses")]'\
		'--dbms[Force back-end DBMS to provided value]'\
		'--dbms-cred=[DBMS authentication credentials (user:password)]'\
		'--os=[Force back-end DBMS operating system to provided value]'\
		'--invalid-bignum[Use big numbers for invalidating values]'\
		'--invalid-logical[Use logical operations for invalidating values]'\
		'--invalid-string[Use random strings for invalidating values]'\
		'--no-cast[Turn off payload casting mechanism]'\
		'--no-escape[Turn off string escaping mechanism]'\
		'--prefix=[Injection payload prefix string]'\
		'--suffix=[Injection payload suffix string]'\
		'--tamper=[Use given script(s) for tampering injection data]'\
		'--level[Level of tests to perform (1-5, default 1)]'\
		'--risk[Risk of tests to perform (1-3, default 1)]'\
		'--string=[String to match when query is evaluated to True]'\
		'--not-string=[String to match when query is evaluated to False]'\
		'--regexp=[Regexp to match when query is evaluated to True]'\
		'--code=[HTTP code to match when query is evaluated to True]'\
		'--text-only[Compare pages based only on the textual content]'\
		'--titles[Compare pages based only on their titles]'\
		'--technique[SQL injection techniques to use (default "BEUSTQ")]'\
		'--time-sec=[Seconds to delay the DBMS response (default 5)]'\
		'--union-cols=[Range of columns to test for UNION query SQL injection]'\
		'--union-char=[Character to use for bruteforcing number of columns]'\
		'--union-from=[Table to use in FROM part of UNION query SQL injection]'\
		'--dns-domain=[Domain name used for DNS exfiltration attack]'\
		'--second-url=[Resulting page URL searched for second-order response]'\
		'--second-req=[Load second-order HTTP request from file]'\
		{-f,--fingerprint}'[Perform an extensive DBMS version fingerprint]'\
		{-a,--all}'[Retrieve everything]'\
		{-b,--banner}'[Retrieve DBMS banner]'\
		'--current-user[Retrieve DBMS current user]'\
		'--current-db[Retrieve DBMS current database]'\
		'--hostname[Retrieve DBMS server hostname]'\
		'--is-dba[Detect if the DBMS current user is DBA]'\
		'--users[Enumerate DBMS users]'\
		'--passwords[Enumerate DBMS users password hashes]'\
		'--privileges[Enumerate DBMS users privileges]'\
		'--roles[Enumerate DBMS users roles]'\
		'--dbs[Enumerate DBMS databases]'\
		'--tables[Enumerate DBMS database tables]'\
		'--columns[Enumerate DBMS database table columns]'\
		'--schema[Enumerate DBMS schema]'\
		'--count[Retrieve number of entries for table(s)]'\
		'--dump[Dump DBMS database table entries]'\
		'--dump-all[Dump all DBMS databases tables entries]'\
		'--search[Search column(s), table(s) and/or database name(s)]'\
		'--comments[Check for DBMS comments during enumeration]'\
		'-D[DBMS database to enumerate]'\
		'-T[DBMS database table(s) to enumerate]'\
		'-C[DBMS database table column(s) to enumerate]'\
		'-X[DBMS database identifier(s) to not enumerate]'\
		'-U[DBMS user to enumerate]'\
		'--exclude-sysdbs[Exclude DBMS system databases when enumerating tables]'\
		'--pivot-column=[Pivot column name]'\
		'--where=[Use WHERE condition while table dumping]'\
		'--start=[First dump table entry to retrieve]'\
		'--stop=[Last dump table entry to retrieve]'\
		'--first=[First query output word character to retrieve]'\
		'--last=[Last query output word character to retrieve]'\
		'--sql-query=[SQL statement to be executed]'\
		'--sql-shell[Prompt for an interactive SQL shell]'\
		'--sql-file=[Execute SQL statements from given file(s)]'\
		'--common-tables[Check existence of common tables]'\
		'--common-columns[Check existence of common columns]'\
		'--udf-inject[Inject custom user-defined functions]'\
		'--shared-lib=[Local path of the shared library]'\
		'--file-read=[Read a file from the back-end DBMS file system]'\
		'--file-write=[Write a local file on the back-end DBMS file system]'\
		'--file-dest=[Back-end DBMS absolute filepath to write to]'\
		'--os-cmd=[Execute an operating system command]'\
		'--os-shell[Prompt for an interactive operating system shell]'\
		'--os-pwn[Prompt for an OOB shell, Meterpreter or VNC]'\
		'--os-smbrelay[One click prompt for an OOB shell, Meterpreter or VNC]'\
		'--os-bof[Stored procedure buffer overflow exploitation]'\
		'--priv-esc[Database process user privilege escalation]'\
		'--msf-path=[Local path where Metasploit Framework is installed]'\
		'--tmp-path=[Remote absolute path of temporary files directory]'\
		'--reg-read[Read a Windows registry key value]'\
		'--reg-add[Write a Windows registry key value data]'\
		'--reg-del[Delete a Windows registry key value]'\
		'--reg-key=[Windows registry key]'\
		'--reg-value=[Windows registry key value]'\
		'--reg-data=[Windows registry key value data]'\
		'--reg-type=[ Windows registry key value type]'\
		'-s[Load session from a stored (.sqlite) file]'\
		'-t[Log all HTTP traffic into a textual file]'\
		'--batch[Never ask for user input, use the default behavior]'\
		'--binary-fields=[Result fields having binary values (e.g. "digest")]'\
		'--check-internet[Check Internet connection before assessing the target]'\
		'--crawl=[Crawl the website starting from the target URL]'\
		'--crawl-exclude=[Regexp to exclude pages from crawling (e.g. "logout")]'\
		'--csv-del=[Delimiting character used in CSV output (default ",")]'\
		'--charset=[Blind SQL injection charset (e.g. "0123456789abcdef")]'\
		'--dump-format=[Format of dumped data (CSV (default), HTML or SQLITE)]'\
		'--encoding=[Character encoding used for data retrieval (e.g. GBK)]'\
		'--eta[Display for each output the estimated time of arrival]'\
		'--flush-session[Flush session files for current target]'\
		'--flush-session[Flush session files for current target]'\
		'--forms[Parse and test forms on target URL]'\
		'--fresh-queries[Ignore query results stored in session file]'\
		'--har=[Log all HTTP traffic into a HAR file]'\
		'--hex[Use hex conversion during data retrieval]'\
		'--output-dir=[Custom output directory path]'\
		'--parse-errors[Parse and display DBMS error messages from responses]'\
		'--save=[Save options to a configuration INI file]'\
		'--scope=[Regexp to filter targets from provided proxy log]'\
		'--test-filter=[Select tests by payloads and/or titles (e.g. ROW)]'\
		'--test-skip=[Skip tests by payloads and/or titles (e.g. BENCHMARK)]'\
		'--update[Update sqlmap]'\
		 '-z[Use short mnemonics (e.g. "flu,bat,ban,tec=EU")]'\
		'--alert=[Run host OS command(s) when SQL injection is found]'\
		'--answers=[Set predefined answers (e.g. "quit=N,follow=N")]'\
		'--beep[Beep on question and/or when SQL injection is found]'\
		'--cleanup[Clean up the DBMS from sqlmap specific UDF and tables]'\
		'--dependencies[Check for missing (optional) sqlmap dependencies]'\
		'--disable-coloring[Disable console output coloring]'\
		'--gpage=[Use Google dork results from specified page number]'\
		'--identify-waf[Make a thorough testing for a WAF/IPS protection]'\
		'--list-tampers[Display list of available tamper scripts]'\
		'--mobile[Imitate smartphone through HTTP User-Agent header]'\
		'--offline[Work in offline mode (only use session data)]'\
		'--purge[Safely remove all content from sqlmap data directory]'\
		'--skip-waf[Skip heuristic detection of WAF/IPS protection]'\
		'--smart[Conduct thorough tests only if positive heuristic(s)]'\
		'--sqlmap-shell[Prompt for an interactive sqlmap shell]'\
		'--tmp-dir=[Local directory for storing temporary files]'\
		'--web-root=[Web server document root directory (e.g. "/var/www")]'\
		'--wizard[Simple wizard interface for beginner users]'\
}

_sqlmap
